#pragma once

#include <iostream>
#include <memory>

#include <glm/glm.hpp>
#include <PerlinNoise.hpp>
#include <engine/world_object/world_object.hpp>

class Chunk {
public:
   Chunk(glm::vec2 position, siv::PerlinNoise noise);

   std::shared_ptr<Mesh> mesh;

private:
   std::vector<Vertex> chunkVertices;

   const int chunkSize = 16;
   int world[16][16];

   std::vector<Vertex> singleCube { 
      {{-1, -1, -1},{4, 0, 0},{1, 0}},
      {{-1, -1, 1},{4, 0, 0},{1, 1}},
      {{-1, 1, 1},{4, 0, 0},{0, 0}},
      {{1, 1, -1},{0, 0, 4},{1, 0}},
      {{-1, -1, -1},{0, 0, 4},{1, 1}},
      {{-1, 1, -1},{0, 0, 4},{0, 0}},
      {{1, -1, 1},{0, 4, 0},{1, 0}},
      {{-1, -1, -1},{0, 4, 0},{1, 1}},
      {{1, -1, -1},{0, 4, 0},{0, 0}},
      {{1, 1, -1},{0, 0, 4},{1, 0}},
      {{1, -1, -1},{0, 0, 4},{1, 1}},
      {{-1, -1, -1},{0, 0, 4},{0, 0}},
      {{-1, -1, -1},{4, 0, 0},{1, 0}},
      {{-1, 1, 1},{4, 0, 0},{1, 1}},
      {{-1, 1, -1},{4, 0, 0},{0, 0}},
      {{1, -1, 1},{0, 4, 0},{1, 0}},
      {{-1, -1, 1},{0, 4, 0},{1, 1}},
      {{-1, -1, -1},{0, 4, 0},{0, 0}},
      {{-1, 1, 1},{0, 0, -4},{1, 0}},
      {{-1, -1, 1},{0, 0, -4},{1, 1}},
      {{1, -1, 1},{0, 0, -4},{0, 0}},
      {{1, 1, 1},{-4, 0, -0},{1, 0}},
      {{1, -1, -1},{-4, 0, -0},{1, 1}},
      {{1, 1, -1},{-4, 0, -0},{0, 0}},
      {{1, -1, -1},{-4, 0, 0},{1, 0}},
      {{1, 1, 1},{-4, 0, 0},{1, 1}},
      {{1, -1, 1},{-4, 0, 0},{0, 0}},
      {{1, 1, 1},{0, -4, -0},{1, 0}},
      {{1, 1, -1},{0, -4, -0},{1, 1}},
      {{-1, 1, -1},{0, -4, -0},{0, 0}},
      {{1, 1, 1},{-0, -4, 0},{1, 0}},
      {{-1, 1, -1},{-0, -4, 0},{1, 1}},
      {{-1, 1, 1},{-0, -4, 0},{0, 0}},
      {{1, 1, 1},{-0, -0, -4},{1, 0}},
      {{-1, 1, 1},{-0, -0, -4},{1, 1}},
      {{1, -1, 1},{-0, -0, -4},{0, 0}}
   };
};
